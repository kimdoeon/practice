/*COMMON*/
.body__container{
    font-family: 'Roboto', sans-serif;
     font-size : 16px; /*기본 폰트 크긴데 혹시 몰라 정의해줌 */
     font-weight: 400;
     color : #333;
}
a{
    text-decoration: none; /*글자에 줄을 치는 속성 없애겠음. 원래는 글자 밑줄 있었음*/
}

/*BTN*/
.btn{
    background : #eee linear-gradient(to bottom,#fcfcfc,#eee);
    height: 34px;
    border : 1px solid #d5d5d5;
    border-radius:4px;
    display : flex;
    align-items : center;
    padding: 0 12px;
    font-size : 14px;
    font-weight : 500;
    line-height : 1.5;
    cursor : pointer;
    box-sizing : border-box;
    position : relative;
    color: #333;
}
.btn:hover::before{
    content:'';
    position : absolute;
    top:0;
    left:0;
    width: 100%;
    height: 100%;
    background : rgba(0,0,0,0.1);
}
.btn.btn--primary{
    border:1px solid #65b836;
    color : #fff;
    background : #55a532 linear-gradient(#91dd70, #55ae2e);
}

/* INPUT TEXT */
.input--text{
    height: 34px;
    padding:0 10px;
    border : 1px solid #ddd;
    border-radius : 5px;
    box-sizing : border-box;
    outline: none;
    box-shadow: inset 0 1px 2px rgba(0,0,0,0.075); 
    font-size : 16px;
}
  
.input--text:focus {
    border-color : #51a7e8;
    box-shadow: inset 0 1px 2px rgba(0,0,0,0.075),
      0 0 5px rgba(81,167,232,0.5);
}
/* Vendor Prefix(브라우저 업체별 접두사) */
.input--text::-webkit-input-placeholder{ color : #cacaca; }
.input--text::-ms-input-placeholder{ color : red; }
.input--text::-moz-input-placeholder{ color : red; } 

/* FLOAT CLEARFIX */
/* float을 가진 부모 요소에게 적용 */
.clearfix::after{
    content: "";
    clear : both;
    display: block;
}
/* 왼쪽으로 flaot하게 */
/* header의 왼쪽 메뉴 */
.float--left{
    float: left;
}
/* header의 오른쪽 메뉴 */
.float--right{
    float: right;
}
/* SUMMARY */
.summary__title{
    font-size: 38px;
    font-weight: 300;
    line-height: 1.25;
    margin-bottom: 18px;
}
.summary__description{
    font-size: 26px;
    font-weight: 300;
    color : #767676;
    line-height: 1.5;
}
/* SECTION & INNER */
.section{
    position : relative;
}
.section .inner{
    max-width: 980px;
    margin : 0 auto;
    box-sizing: border-box;
    position : relative;
}
/* ----------------------------------------------------------------- */

/* HEADER */
header{
    border-bottom: 1px solid regba(0,0,0,.75);
    box-shadow: 0 0 5px rgba(0,0,0,.75);
    background: #fff;

}

header .inner{
    /* 왜 header의 높이를 inner에다 설정하느냐? header에 78px을 설정하면
    inner에는 적용되지 않으므로 inner에 또 78px을 설정해줘야 한다.
    inner에 설정하면 header height:auto이기 때문에 자동으로 header로 78px적용됨! */   
    height: 78px;
    /* max-width: 980px;
    margin : 0 auto; 가운데 정렬. 이를 위해선 무조건 width가 정의되어야 함(굉장히 많이 쓰는 방법) */

}
/* 매번 .inner쓰는게 번거로움 의미도 없고. 그래서 생략 */
header .menu-group{
    height: 100%;
    display: flex;
    align-items: center;
}

header .logo{
    margin-right: 10px;
}

header .logo a{
    /* inline은 범위를 가질 수 없고, 그러므로 이미지를 표현 할 수 없음.
    그러므로 block으로 변경 */
    display: block;
    background: url("../img/logo.svg"); 
    width: 32px;
    height: 32px;   
    /* background속성을 통해 이미지를 삽입 할 경우 이미지의 대체 텍스트는
    html에 적혀있는 GitHub가 된다.(그래서 생략 불가능) 그래서 이를 화면
    에만 안보이게 -9999(이 값은 약속)로 왼쪽 끝으로 민다. */
    text-indent: -9999px;
}
header .logo a:hover{
    /* 이미지를 바꿈으로써 마치 색이 바뀌는듯한 효과 */
    background: url("../img/logo_on.svg");
}
header .main-menu{
    display : flex;
}

header .main-menu li a{
    /* 목적 : 클릭 범위를 늘리기 위함
    a 태그를 누르면 이동하도록 되어있다. 근데 a tag의 content가 너무 작아
    사용자가 누르기 어렵다. 이를 위해 요소  자체의 크기를 늘려줄 수 있는 padding
    을 사용했다. a 는 inline요손데 그럼 padding값이 제대로 적용되지 않는다.
    그러므로 block요소로 바꿔준다.*/
    display: block;
    padding : 10px;
    color : #3c4146
}

header .main-menu li a:hover{
    color : #4078c0;
}

header .sign-group{
    display:flex;
    height: 100%;
    align-items: center;
}
header .btn-group{
    /* order숫자가 높은 것부터 나열. 일반 화면에서의 순서와 화면을 줄였을때의 순서가 반댄데
    화면을 줄였을 때의 순서를 기준으로 html구조를 짜서 이렇게 역순으로 정렬 해주는 것*/
    order: 2;
    /* btn의 설정을 inline-flex로 했기 때문에 엔터로  인한 공백이 있었다. 이걸 없애기 위해 flex로 */
    display : flex;
}
header .btn-group .sign-in{
    margin-right: 4px;
}
/* id 선택자는 고유해서 굳이 부모 안적어줘도 됨 */
#search-form{
    order: 1;
    margin-right: 12px;
}
#search{
    width: 160px;
    font-size: 14px;
}
/* search 다음 형제 요소 중 type==submit인 선택자 */
#search +[type="submit"]{
    /* 화면에 나오지 않게 만든다 */
    display : none;
}
header .sub-menu{
    /* 원래 기본값이 0이라 생략 order: 0; */
    display: flex;
    margin-right: 10px;
}

header .sub-menu li a{
    display : block;
    padding : 8px;
    font-size : 13px;
    color : #3c4146
}

header .sub-menu li a:hover{
    color: #4078c0;
}
#toggle-btn{
    display: none;
    /* 원래 이러한 속성들이 정의 된 상태에서 보이고, 보이지 않고만 조작하는게 훨씬 편리하다
    수정 전 밑의 속성들은 @media안에 있었음
    즉 요소에 대한 정의를 미디어쿼리 안에다 하는 것은 좋지 않다는 것 */
    background:url("../img/toggle-btn.svg");
    width: 18px;
    height: 24px;
    position: absolute;
    top : 16px;
    right : 20px;
    cursor : pointer;
    text-indent: -9999px;
}
/* VISUAL */

.section__visual{
    background-image: url(../img/bg.jpg);
    background-repeat: no-repeat;
    background-position: bottom left;
    /* 배경 사이즈를 요소의 전체 영역으로 커버해라. 화면 축소 시 이미지도 축소, 확대시 이미지도 확대 */
    background-size: cover;
}

.section__visual::before{
    /* 배경 이미지를 좀 더 어둡게 만들기 위해 검정 배경을 불투명도를 설정해 덮는다 */
    content: "";
    position:absolute;
    /*이 밑의 4줄은 top:0, left : 0, w:100%, h:100%와 동일한 효과*/
    top :0;
    left: 0;
    bottom: 0;
    right: 0;
    background: rgba(0,0,0,.3);
}

.section__visual .inner{
    /* max-width: 980px;
    margin: 0 auto;  공통으로 쓰는 내용이라 따로 정의.header inner도 마찬가지*/
    padding : 160px 0;
    display : flex;
}
.section__visual .summary{
    /* flex-grow: 1;
    flex-basis: 0; 
    위 두 문장은 flex단축 속성으로 flex: 1 0 0(grow shrink basis)로 나타낼 수 있다 
    이때 basis의 기본값이 0이라 최종적으론 flex : 1*/
    flex : 1;
    margin-right: 90px;
}
.section__visual .summary__title{
    color : #fff;
    font-size: 54px;
    /* box-shadow : 일반적인 사각형 형태의 요소에 그림자 추가할 때 사용*/
    /* 얜 글자에 그림자 넣는 속성 */
    text-shadow: 0 1px 1px rgba(0,0,0,.25),
                 0 1px 25px rgba(0,0,0,.75);
}

.section__visual .summary__description{
    color :#fff;
    text-shadow: 0 1px 1px rgba(0,0,0,.25),
                 0 1px 25px rgba(0,0,0,.75);
}

#sign-form{
    /* 이 안의 로그인,이메일,비번, 버튼은 모두 부모 요소의 가로 너비에
    맞추게 모두 설정해줬다.예)w:100%. 그러므로 최종적으로 가로 너비는
    이곳에서 정한다 */
    width: 340px;
    margin-top: 16px;
}
#sign-form li{
    margin-bottom: 17px;
}
#sign-form li:last-child{
    /* li tag중 가장 마지막은 굳이 margin-bottom이 필요 없다.
    어차피 맨 밑이기 때문 */
    margin-bottom: 0;
}
#sign-form .input--text{
    width: 100%;
    height: 40px;
}
#sign-form .caption{
    font-size: 12px;
    margin-top: 5px;
    color : rgba(255,255,255,.6);
    line-height: 1.5;
    text-align: center;

}
/* form 안에 submit은 하나라 고유하게 정의 가능*/
#sign-form [type="submit"]{
    width: 100%;
    height: 62px;
    padding :0 25px;
    font-size: 20px;
    justify-content: center;
}

/*FEATURE*/
.section--feature{
    background: #f5f5f5;
    padding-top: 66px;
}
.section--feature .summary{
    max-width: 820px;
    margin: 0 auto;
    text-align: center;
}
.section--feature .video{
    max-width: 650px;
    margin : 50px auto;
}
.section--feature .video .video-ratio{
    height: 0;
    padding-top: 56.25%;
    position: relative;
}
.section--feature .video .video-ratio iframe{
    position: absolute;
    top:0;
    left:0;
    width: 100%;
    height: 100%;
}

.section--feature .tiles{
    border-top: 1px solid #e5e5e5;
    border-bottom: 1px solid #e5e5e5;
}
.section--feature .tiles .inner{
    max-width : 1200px;
}
.section--feature .tiles ul{
    /* display: grid;
    grid-template-columns: repeat(4,1fr); 
    :최신 버전. 강사님은 구형 브라우저를 위해 요소를 4개로 정렬하는 것을 float
    으로 구현하였다*/
}
.section--feature .tiles li{
    padding: 34px 24px;
    text-align: center;
    line-height: 1.5;
    border-right : 1px solid #e5e5e5;
    box-sizing: border-box; /*padding,border로 인해 요소 크기 증가 막기 위함*/
    float : left;
    width: 25%;
}
.section--feature .tiles li:last-child{
    /* 마지막엔 border-right없음 */
    border-right: none;
}
.section--feature .tiles li img{
    width: 100%;
    padding : 14px 10% 24px;
    box-sizing: border-box;
}
.section--feature .tiles li h3{
    font-size: 18px;
    font-weight: 500;
    margin-bottom: 10px;
}
.section--feature .tiles li p{
    font-size: 14px;
    color : #767676
}

/* WHERE IS */
.section--where-is{

}
.section--where-is .inner{
    padding-top: 80px;
}

#map{
    width: 100%;
    height: 400px;
    margin-top: 40px;
    border: 1px solid rgba(0,0,0,.2);
    border-bottom: none;
    box-shadow: 0 0 20px rgba(0,0,0,.2);
    box-sizing: border-box;
}

/* PRICING CARD */
.section--pricing{
    /* 잘 보이진 않지만 살짝 그라데이션이 있다 */
    background: linear-gradient(#e5e5e5, #fff);
}
.section--pricing .inner{
    padding : 80px 0;
}

.section--pricing .card{
    display:flex;
    border: 1px solid #e5e5e5;
    border-radius: 6px;
    box-sizing: border-box;
}
.section--pricing .card .cell{
    padding : 24px;
    display: flex;
    justify-content: center;
    align-items: center;
}
.section--pricing .card .cell1 .btn{
    height: 50px;
    font-size: 16px;
}
.section--pricing .card .cell2{
    font-size: 22px;
    font-weight: 300;
    line-height: 1.5;
    flex : 1; /*이거 잘 모르겠음 이렇게 설정한다고 오른쪽 셀은 가변하도록, 왼쪽 버튼의 문구는 고정으로 설정되는건가?*/
    border-left : 1px solid #e5e5e5
}

/* FOOTER */
footer{
}
footer .inner{
    padding: 50px 0;
    border-top: 1px solid #eee;
}
footer .site-links{
    display: flex;
}
footer .site-links li{
    font-size: 12px;
    margin-right: 10px;
    color : #767676;
}
footer .site-links li a{
    color : #4078c0
}
footer .site-links li a:hover{
    text-decoration: underline;
}
footer .logo{
    /* 부모 요소를 기준으로 가운데 정렬이 아니라 가운데 배치하는 코드 */
    position: absolute;
    top:0;
    bottom: 0;
    left: 0;
    right: 0;
    margin: auto;
    width: 24px;
    height: 24px;
}
/* logo에 hover하면 그 안의 svg를 제어하는 코드 */
footer .logo:hover svg{
    fill: #4078c0;
}

